<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.Get">
            <summary>
            Lista todos os filmes
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.Delete(System.Int32)">
            <summary>
            Deleta um filme
            </summary>
            <param name="id">id do filme a ser deletado</param>
            <returns>StatusCode</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.Post(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastra um novo filme
            </summary>
            <param name="novoFilme">Objeto com o novo filme a ser cadastrado</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.GetById(System.Int32)">
            <summary>
            Busca um filme pelo seu id e o lista
            </summary>
            <param name="id">Id do filme a ser buscado</param>
            <returns>Status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.UpdateByUrl(webapi.filmes.tarde.Domains.FilmeDomain,System.Int32)">
            <summary>
            Atualizar um filme passando seu Id pela URl
            </summary>
            <param name="filme">Objeto com filme que deseja atualizar</param>
            <param name="id">Id do filme que deseja atualizar</param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.UpdateByBody(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme passando o id dele pelo corpo/JSON
            </summary>
            <param name="filme">Objeto com filme que deseja atualizar</param>
            <returns>Status Code</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controller.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            Exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controller.GeneroController._generoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.#ctor">
            <summary>
            Instância do objeto _generoRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.Get">
            <summary>
            Endpoint que acessa o método de listar os gêneros
            </summary>
            <returns>Uma lista de gêneros e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método cadastrar gênero
            </summary>
            <param name="novoGenero">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.UpdateIdBody(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o id dele pelo corpo/JSON
            </summary>
            <param name="genero">objeto com gênero que deseja atualizar</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método deletar gênero
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.GetById(System.Int32)">
            <summary>
            Busca e mostra um gênero buscando ele pelo seu Id
            </summary>
            <param name="Id">Id do gênero a ser buscado</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.UpdateByUrl(webapi.filmes.tarde.Domains.GeneroDomain,System.Int32)">
            <summary>
            Atualiza um gênero passando o id do gênero que deseja atualizar pela URL
            </summary>
            <param name="genero">Objeto com gênero que dejeta atualizar</param>
            <param name="id">Id do gênero que deseja atualizar</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.UsuarioController.Post(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Busca um login pela seu email e senha
            </summary>
            <param name="email">Email da conta que deseja encontrar</param>
            <param name="senha">Senha da conta que deseja encontrar</param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            CLasse que representa a entidade(tabela) Genero
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.UsuarioDomain">
            <summary>
            CLasse que representa a entidade(tabela) Usuário 
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interface.IFilmeRepository">
            <summary>
            Interface responsável pelo repositorório FilmeRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os filmes cadastrados
            </summary>
            <returns>Uma lista de filmes</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu id
            </summary>
            <param name="id">id do objeto que será buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o id pelo corpo da requisição
            </summary>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o id pela URL da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interface.IGeneroRepository">
            <summary>
            Interface responsável pelo repositorório GeneroRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo Gênero
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma lista de gêneros</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu id
            </summary>
            <param name="Id">id do objeto que será buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o id pela URL da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="Id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.FilmeRepository">
            <summary>
            CLasse responsável pelo repositório dos filmes
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexão comm o banco de dados, que recebe os seguintes parâmetros:
            Data Source : Nome do servidor do banco
            Initial Catalog : Nome do banco de dados
            Autenticação
                -Windows : Integrated Security = True
                SqlServer : User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme passando o Id dele pelo corpo/JSON
            </summary>
            <param name="filme">objeeto com o filme que deseja atualizar</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme passando seu id pela URL
            </summary>
            <param name="id">Id do filme que deseja atualizar</param>
            <param name="filme">Objeto com filme que deseja atualizar</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca apenas um filme desejado pelo seu id
            </summary>
            <param name="id">Id do filme que deseja buscar</param>
            <returns>Filme buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastra um novo filme
            </summary>
            <param name="novoFilme">Objeto com novo filme</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Deletar(System.Int32)">
            <summary>
            Deleta um filme
            </summary>
            <param name="id">Id do filme que deseja deletar</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Lista todos os filmes
            </summary>
            <returns>Uma lista com todos os filmes</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.GeneroRepository">
            <summary>
            CLasse responsável pelo repositório dos gêneros
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão comm o banco de dados, que recebe os seguintes parâmetros:
            Data Source : Nome do servidor do banco
            Initial Catalog : Nome do banco de dados
            Autenticação
                -Windows : Integrated Security = True
                SqlServer : User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o id do gênero que deseja atualizar pela URL
            </summary>
            <param name="id">Id do gênero que deseja atualizar</param>
            <param name="genero">Objeto com gênero que dejeta atualizar</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um gênero pelo seu Id
            </summary>
            <param name="Id">Id do gênero buscado</param>
            <returns>Objeto com o gênero buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um gênero
            </summary>
            <param name="Id">Id do gênero a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo gênero
            </summary>
            <returns>Uma lista de objetos do tipo gênero</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.BuscarLogin(System.String,System.String)">
            <summary>
            Busca um login pela seu email e senha
            </summary>
            <param name="email">Email da conta que deseja encontrar</param>
            <param name="senha">Senha da conta que deseja encontrar</param>
            <returns>Objeto com Login</returns>
        </member>
    </members>
</doc>
